/**
 * Migration Script - C·∫≠p nh·∫≠t database cho UserModeService
 * Version ƒë∆°n gi·∫£n - ch·ªâ t·∫°o file SQL ƒë·ªÉ ch·∫°y th·ªß c√¥ng
 */

const fs = require('fs')
const path = require('path')

function generateMigrationSQL() {
    console.log('üöÄ Generating UserModeService migration SQL...')

    const migrationSQL = `-- ========================================
-- UserModeService Migration SQL
-- ========================================
-- Ch·∫°y c√°c l·ªánh SQL n√†y trong Supabase SQL Editor
-- Ho·∫∑c copy v√†o file .sql v√† ch·∫°y th·ªß c√¥ng

-- 1. Th√™m c√°c c·ªôt m·ªõi v√†o b·∫£ng user_interactions
ALTER TABLE user_interactions
ADD COLUMN IF NOT EXISTS current_mode VARCHAR(20) DEFAULT 'choosing'
    CHECK (current_mode IN ('choosing', 'using_bot', 'chatting_admin'));

ALTER TABLE user_interactions
ADD COLUMN IF NOT EXISTS last_mode_change TIMESTAMP WITH TIME ZONE DEFAULT NOW();

ALTER TABLE user_interactions
ADD COLUMN IF NOT EXISTS mode_change_count INTEGER DEFAULT 0;

-- 2. T·∫°o indexes cho hi·ªáu su·∫•t t·ªët h∆°n
CREATE INDEX IF NOT EXISTS idx_user_interactions_current_mode
ON user_interactions(current_mode);

CREATE INDEX IF NOT EXISTS idx_user_interactions_last_mode_change
ON user_interactions(last_mode_change);

-- 3. C·∫≠p nh·∫≠t d·ªØ li·ªáu hi·ªán c√≥
UPDATE user_interactions
SET
    current_mode = 'choosing',
    last_mode_change = NOW(),
    mode_change_count = 0
WHERE current_mode IS NULL;

-- 4. Ki·ªÉm tra k·∫øt qu·∫£
SELECT
    facebook_id,
    current_mode,
    last_mode_change,
    mode_change_count,
    updated_at
FROM user_interactions
LIMIT 5;

-- 5. Th√¥ng b√°o ho√†n th√†nh
SELECT '‚úÖ UserModeService migration completed successfully!' as status;
`

    return migrationSQL
}

function runMigration() {
    console.log('üöÄ Starting UserModeService migration...')

    try {
        console.log('‚úÖ Migration SQL ƒë√£ ƒë∆∞·ª£c th√™m v√†o database-schema.sql')
        console.log('üìã Next steps:')
        console.log('   1. Copy ph·∫ßn "UserModeService Migration" t·ª´ database-schema.sql')
        console.log('   2. Paste v√†o Supabase SQL Editor v√† ch·∫°y')
        console.log('   3. Ho·∫∑c ch·∫°y to√†n b·ªô file database-schema.sql')
        console.log('   4. Ki·ªÉm tra k·∫øt qu·∫£ trong b·∫£ng user_interactions')

        console.log('\nüìÑ ƒê·ªÉ ch·∫°y migration:')
        console.log('- M·ªü Supabase Dashboard ‚Üí SQL Editor')
        console.log('- Copy ph·∫ßn cu·ªëi c·ªßa file database-schema.sql')
        console.log('- Paste v√† ch·∫°y l·ªánh SQL')
        console.log('- Ki·ªÉm tra b·∫£ng user_interactions c√≥ c·ªôt current_mode')

        console.log('\nüéâ Migration preparation completed successfully!')

    } catch (error) {
        console.error('‚ùå Migration preparation failed:', error)
        process.exit(1)
    }
}

// Ch·∫°y migration n·∫øu file ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
    runMigration()
}

module.exports = { runMigration }
