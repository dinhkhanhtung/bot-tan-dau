// Test script Ä‘á»ƒ kiá»ƒm tra giá»›i háº¡n hiá»ƒn thá»‹ nÃºt Chat Bot
const {
    shouldShowChatBotButton,
    resetChatBotOfferCount,
    incrementNormalMessageCount,
    getUserChatBotOfferCount,
    setUserBotMode
} = require('./src/lib/anti-spam.ts')

async function testChatBotLimit() {
    console.log('ðŸ§ª Testing Chat Bot Button Limit...\n')

    const testUserId = 'test_user_limit_789'

    // Test 1: Láº§n Ä‘áº§u tiÃªn - chÃ o má»«ng + nÃºt
    console.log('Test 1: First time - welcome message + button')
    incrementNormalMessageCount(testUserId) // count = 1
    const data1 = getUserChatBotOfferCount(testUserId)
    console.log('Count:', data1?.count)
    console.log('Expected: 1\n')

    // Test 2: Láº§n thá»© 2 - chá»‰ thÃ´ng bÃ¡o admin, KHÃ”NG cÃ³ nÃºt
    console.log('Test 2: Second time - admin notification only, NO button')
    incrementNormalMessageCount(testUserId) // count = 2
    const data2 = getUserChatBotOfferCount(testUserId)
    console.log('Count:', data2?.count)
    console.log('Expected: 2\n')

    // Test 3: Láº§n thá»© 3 - bot dá»«ng hoÃ n toÃ n
    console.log('Test 3: Third time - bot should stop completely')
    incrementNormalMessageCount(testUserId) // count = 3
    const data3 = getUserChatBotOfferCount(testUserId)
    console.log('Count:', data3?.count)
    console.log('Expected: 3\n')

    // Test 4: User áº¥n nÃºt Chat Bot - KHÃ”NG reset counter
    console.log('Test 4: User clicks Chat Bot button - NO reset')
    setUserBotMode(testUserId)
    const data4 = getUserChatBotOfferCount(testUserId)
    console.log('Count after clicking:', data4?.count)
    console.log('Expected: 3 (still at limit)\n')

    console.log('âœ… Chat Bot Button Limit tests completed!')
}

// Cháº¡y test
testChatBotLimit().catch(console.error)
